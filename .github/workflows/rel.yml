---
    name: Rel
    
    on:
      release:
        types: [prereleased,released]
    
    permissions:
      contents: read
      checks: write
      statuses: write
    jobs:
      test:
        runs-on: ubuntu-latest
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        steps:
          - name: Log the event
            run: echo "$GITHUB_CONTEXT"
          - name: Runs on Pre-Release
            if: 'github.event.release.prerelease'
            run: echo "This is a Pre-Release"
          - name: Runs on Release
            if: '!github.event.release.prerelease'
            run: echo "This is a Release"
          - name: Set commit status
            uses: actions/github-script@v7
            with:
              script: |
                const isPreRelease = "${{ github.event.release.prerelease }}" == 'true' ? true : false;
                const conclusion = isPreRelease ? 'failure' : 'success';
    
                const summary = isPreRelease 
                                ? 'This version is not approved to be promoted to production'
                                : 'This version has been approved and can be promoted to production';
    
                const res = await github.rest.repos.createCommitStatus({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  sha: context.sha,
                  state: conclusion,
                  description: summary,
                  context: 'approval'
                })
                core.info(`Response: ${JSON.stringify(res.data)}`);
    
        #   - name: Run rest.checks.create
        #     uses: actions/github-script@v7
        #     with:
        #       script: |
        #         const isPreRelease = "${{ github.event.release.prerelease }}" == 'true' ? true : false;
        #         const conclusion = isPreRelease ? 'failure' : 'success';
    
        #         const summary = isPreRelease 
        #                         ? 'This version is not approved to be promoted to production'
        #                         : 'This version has been approved and can be promoted to production';
    
        #         const checkName = "Approved"
        #         const res = await github.rest.checks.create({
        #           owner: context.repo.owner,
        #           repo: context.repo.repo,
        #           name: checkName,
        #           head_sha: context.sha,
        #           status: 'completed',
        #           conclusion: 'success',
        #           output: {
        #             title: "Approval status",
        #             summary: summary
        #           }
        #         })
        #         core.info(`Response: ${JSON.stringify(res.data)}`);